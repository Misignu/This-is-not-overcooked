[gd_scene load_steps=17 format=2]

[ext_resource path="res://assets/atlas/green_guy_front.tres" type="Texture" id=2]
[ext_resource path="res://assets/sprites/hud/hud.png" type="Texture" id=3]
[ext_resource path="res://assets/fonts/Cave-Story.ttf" type="DynamicFontData" id=4]

[sub_resource type="StyleBoxFlat" id=1]
bg_color = Color( 0.207843, 0.180392, 0.25098, 1 )

[sub_resource type="GDScript" id=2]
script/source = "tool
extends PanelContainer

signal base_color_changed
signal action_key_pressed
signal action_key_released
signal player_input_desattached

const DISABLED_COLOR = Color(.5, .5, .5)
export var base_color: Color setget set_base_color

var is_enabled: bool setget set_is_enabled
var player_input_index: int
var base_colors: = [
	Color(\"0bca6a\"),
	Color(\"780bca\"),
	Color(\"cac70b\"),
	Color(\"ca2a0b\"),
	Color(\"0b82ca\")
]
var available_characters: = [
	preload(\"res://assets/atlas/green_guy_front.tres\"),
	preload(\"res://assets/atlas/purple_guy_front.tres\"),
	preload(\"res://assets/atlas/yellow_guy_front.tres\"),
	preload(\"res://assets/atlas/red_guy_front.tres\"),
	preload(\"res://assets/atlas/blue_guy_front.tres\")
]

onready var join_the_party = \"[center]Press [color=#0bca6a]START[/color][/center]\\n[center]to join[/center]\\n[center]the party[/center]\" if Engine.editor_hint else tr(\"JOIN_THE_PARTY\")
onready var boost_the_timer = tr(\"BOOST\")
onready var character_texture_rect: TextureRect = $MarginContainer/VBoxContainer/PanelContainer/HBoxContainer/MarginContainer/TextureRect
onready var button_right: TextureButton = $MarginContainer/VBoxContainer/PanelContainer/HBoxContainer/CenterContainer/MarginContainer/LeftButton
onready var button_left: TextureButton = $MarginContainer/VBoxContainer/PanelContainer/HBoxContainer/CenterContainer2/MarginContainer/RightButton
onready var instructions := $MarginContainer/VBoxContainer/CenterContainer/Label

func _ready() -> void:
	
	set_process_input(false)
	set_is_enabled(false)
	
	if Engine.is_editor_hint():
		set_base_color(base_color)

func _input(event: InputEvent) -> void:
	
	if event.is_action_pressed(str(\"player\", player_input_index, \"_move_left\")):
		select_availlable_character(false)
	
	if event.is_action_pressed(str(\"player\", player_input_index, \"_move_right\")):
		select_availlable_character()
	
	if event.is_action_pressed(str(\"player\", player_input_index, \"_primary_action\")):
		emit_signal(\"action_key_pressed\")
	
	if event.is_action_released(str(\"player\", player_input_index, \"_primary_action\")):
		emit_signal(\"action_key_released\")
	
	if event.is_action_pressed(str(\"player\", player_input_index, \"_secoundary_action\")):
		
		Game.players[get_index()].id = -1
		emit_signal(\"player_input_desattached\")

# @signals
func _on_LeftButton_pressed():
	select_availlable_character(false)

func _on_RightButton_pressed():
	select_availlable_character()

# @main
func select_availlable_character(use_next: bool = true):
	
	var base = available_characters.find($MarginContainer/VBoxContainer/PanelContainer/HBoxContainer/MarginContainer/TextureRect.texture)
	var id: int = -1
	
	if base == -1:
		base = 0
	
	id = _get_availlable_character_id(base, use_next)
	set_character(id)
	Game.players[get_index()].character = available_characters[id].atlas
	Game.players[get_index()].id = id

func atach_player_input(index: int, enable: bool):
	
	player_input_index = index
	set_process_input(enable)
	set_is_enabled(enable)

func set_character(id: int):
	
	if not Engine.is_editor_hint():
		
		set_base_color(base_colors[id])
		$MarginContainer/VBoxContainer/PanelContainer/HBoxContainer/MarginContainer/TextureRect.texture = available_characters[id]

func _get_availlable_character_id(base: int, use_next: bool) -> int:
	
	var id: int = -1
	var is_availlable: bool
	var counter: int = base
	
	while id == -1: # REFACTOR
		
		is_availlable = true
		counter += (1 if use_next else -1)
#		counter = _cicle_clamp(0, counter, available_characters.size() - 1)
		
		if counter < 0:
			counter = available_characters.size() -1
			
		elif counter > available_characters.size() -1:
			counter = 0
		
		if counter == base:
			push_error(\"The availlable_characters number isn't enough to fullfill the current number of players'\")
			break
		
		for player in Game.players:
			
			if player.id == counter:
				is_availlable = false
		
		if is_availlable:
			id = counter
			break
	
	return id

# @setters
func set_is_enabled(value: bool) -> void:
	if not Engine.is_editor_hint():
		
		if not value:
			set_base_color(DISABLED_COLOR)
		
		instructions.bbcode_text = boost_the_timer.format({\"color\": base_color.to_html()}) if value else join_the_party
		character_texture_rect.visible = value
		button_right.visible = value
		button_left.visible = value
		
		is_enabled = value

func set_base_color(value: Color):
	emit_signal(\"base_color_changed\", value)
	
	if is_inside_tree():
		instructions.bbcode_text = boost_the_timer.format({\"color\": value.to_html()}) if is_enabled else join_the_party
	
	base_color = value
"

[sub_resource type="DynamicFont" id=3]
size = 140
font_data = ExtResource( 4 )

[sub_resource type="GDScript" id=4]
script/source = "tool
extends Label

func _on_Panel_base_color_changed(color: Color):
	
	add_color_override(\"font_color\", color)
	update()
"

[sub_resource type="StyleBoxFlat" id=5]
bg_color = Color( 0.0431373, 0.792157, 0.415686, 1 )

[sub_resource type="GDScript" id=6]
script/source = "tool
extends PanelContainer

var style = StyleBoxFlat.new()

func _ready():
	add_stylebox_override(\"panel\", style)

func _on_Panel_base_color_changed(color: Color):
	
	style.set_bg_color(color)
	update()
"

[sub_resource type="CanvasItemMaterial" id=7]
blend_mode = 1

[sub_resource type="AtlasTexture" id=8]
atlas = ExtResource( 3 )
region = Rect2( 16, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=9]
atlas = ExtResource( 3 )
region = Rect2( 48, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=10]
atlas = ExtResource( 3 )
region = Rect2( 32, 16, 16, 16 )

[sub_resource type="AtlasTexture" id=11]
atlas = ExtResource( 3 )
region = Rect2( 64, 16, 16, 16 )

[sub_resource type="DynamicFont" id=12]
size = 32
font_data = ExtResource( 4 )

[sub_resource type="GDScript" id=13]
script/source = "tool
extends RichTextLabel

func _on_Panel_base_color_changed(color: Color):
	
	add_color_override(\"font_color\", color)
	update()
"

[node name="Panel" type="PanelContainer"]
margin_right = 237.0
margin_bottom = 570.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_styles/panel = SubResource( 1 )
script = SubResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}
base_color = Color( 0.0431373, 0.792157, 0.415686, 1 )

[node name="MarginContainer" type="MarginContainer" parent="."]
margin_right = 245.0
margin_bottom = 570.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/margin_right = 15
custom_constants/margin_top = 15
custom_constants/margin_left = 15
custom_constants/margin_bottom = 15
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer"]
margin_left = 15.0
margin_top = 15.0
margin_right = 230.0
margin_bottom = 555.0

[node name="Label" type="Label" parent="MarginContainer/VBoxContainer"]
margin_right = 215.0
margin_bottom = 88.0
custom_fonts/font = SubResource( 3 )
custom_colors/font_color = Color( 0.0431373, 0.792157, 0.415686, 1 )
text = "P1"
align = 1
script = SubResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PanelContainer" type="PanelContainer" parent="MarginContainer/VBoxContainer"]
margin_top = 92.0
margin_right = 215.0
margin_bottom = 312.0
rect_min_size = Vector2( 0, 220 )
rect_clip_content = true
custom_styles/panel = SubResource( 5 )
script = SubResource( 6 )

[node name="HBoxContainer" type="HBoxContainer" parent="MarginContainer/VBoxContainer/PanelContainer"]
margin_right = 215.0
margin_bottom = 220.0

[node name="CenterContainer" type="CenterContainer" parent="MarginContainer/VBoxContainer/PanelContainer/HBoxContainer"]
margin_right = 26.0
margin_bottom = 220.0

[node name="MarginContainer" type="MarginContainer" parent="MarginContainer/VBoxContainer/PanelContainer/HBoxContainer/CenterContainer"]
margin_top = 97.0
margin_right = 26.0
margin_bottom = 123.0
custom_constants/margin_right = 5
custom_constants/margin_top = 5
custom_constants/margin_left = 5
custom_constants/margin_bottom = 5

[node name="LeftButton" type="TextureButton" parent="MarginContainer/VBoxContainer/PanelContainer/HBoxContainer/CenterContainer/MarginContainer"]
self_modulate = Color( 0.196078, 0.156863, 0.235294, 0.588235 )
material = SubResource( 7 )
margin_left = 5.0
margin_top = 5.0
margin_right = 21.0
margin_bottom = 21.0
size_flags_horizontal = 3
size_flags_vertical = 3
texture_normal = SubResource( 8 )
texture_pressed = SubResource( 9 )

[node name="MarginContainer" type="MarginContainer" parent="MarginContainer/VBoxContainer/PanelContainer/HBoxContainer"]
margin_left = 30.0
margin_right = 185.0
margin_bottom = 220.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/margin_right = 15
custom_constants/margin_top = 15
custom_constants/margin_left = 15
custom_constants/margin_bottom = 15

[node name="TextureRect" type="TextureRect" parent="MarginContainer/VBoxContainer/PanelContainer/HBoxContainer/MarginContainer"]
margin_left = 15.0
margin_top = 15.0
margin_right = 140.0
margin_bottom = 205.0
texture = ExtResource( 2 )
expand = true
stretch_mode = 6

[node name="CenterContainer2" type="CenterContainer" parent="MarginContainer/VBoxContainer/PanelContainer/HBoxContainer"]
margin_left = 189.0
margin_right = 215.0
margin_bottom = 220.0

[node name="MarginContainer" type="MarginContainer" parent="MarginContainer/VBoxContainer/PanelContainer/HBoxContainer/CenterContainer2"]
margin_top = 97.0
margin_right = 26.0
margin_bottom = 123.0
custom_constants/margin_right = 5
custom_constants/margin_top = 5
custom_constants/margin_left = 5
custom_constants/margin_bottom = 5

[node name="RightButton" type="TextureButton" parent="MarginContainer/VBoxContainer/PanelContainer/HBoxContainer/CenterContainer2/MarginContainer"]
self_modulate = Color( 0.196078, 0.156863, 0.235294, 0.588235 )
material = SubResource( 7 )
margin_left = 5.0
margin_top = 5.0
margin_right = 21.0
margin_bottom = 21.0
size_flags_horizontal = 3
size_flags_vertical = 3
texture_normal = SubResource( 10 )
texture_pressed = SubResource( 11 )

[node name="CenterContainer" type="CenterContainer" parent="MarginContainer/VBoxContainer"]
margin_top = 316.0
margin_right = 215.0
margin_bottom = 540.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="Label" type="RichTextLabel" parent="MarginContainer/VBoxContainer/CenterContainer"]
margin_top = 72.0
margin_right = 215.0
margin_bottom = 152.0
rect_min_size = Vector2( 215, 80 )
rect_pivot_offset = Vector2( 412, 83 )
custom_fonts/normal_font = SubResource( 12 )
bbcode_enabled = true
bbcode_text = "[center]Press [color=#0bca6a]START[/color][/center]
[center]to join[/center]
[center]the party[/center]"
text = "Press START
to join
the party"
script = SubResource( 13 )
[connection signal="base_color_changed" from="." to="MarginContainer/VBoxContainer/CenterContainer/Label" method="_on_Panel_base_color_changed"]
[connection signal="base_color_changed" from="." to="MarginContainer/VBoxContainer/Label" method="_on_Panel_base_color_changed"]
[connection signal="base_color_changed" from="." to="MarginContainer/VBoxContainer/PanelContainer" method="_on_Panel_base_color_changed"]
[connection signal="pressed" from="MarginContainer/VBoxContainer/PanelContainer/HBoxContainer/CenterContainer/MarginContainer/LeftButton" to="." method="_on_LeftButton_pressed"]
[connection signal="pressed" from="MarginContainer/VBoxContainer/PanelContainer/HBoxContainer/CenterContainer2/MarginContainer/RightButton" to="." method="_on_RightButton_pressed"]
